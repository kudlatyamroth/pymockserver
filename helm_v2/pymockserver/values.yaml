# Default values for pymockserver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: kudlatyamroth/pymockserver
  tag: 1.7.0
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

httpReadinessProbe:
  path: /_meta/health

httpLivenessProbe:
  path: /_meta/health
  period: 30

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# memoryMediaLimit: 256Mi

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  {}
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

## Fixture files:
#fixtureFiles:
#  fixture1.yaml: |
#    - httpRequest:
#        method: GET
#        path: /users
#        queryStringParameters:
#          name: [ "John" ]
#          age: [ "25", "30" ]
#      httpResponse:
#        - status_code: 200
#          headers:
#            request-id: 'f9ed4675f1c53513c61a3b3b4e25b4c0'
#          body: '{"users":["John","Dave"]}"'
#          remaining_times: 2
#          delay: 0
#        - status_code: 200
#          headers:
#            request-id: 'f9ed4675f1c53513c61a3b3b4e25b4c0'
#          body: '{"users":["John","Dave","Jane"]}"'
#          remaining_times: -1
#          delay: 0
#
#  fixture2.json: |
#    [{
#      "httpRequest": {
#        "method": "GET",
#        "path": "/user_list",
#        "queryStringParameters": {
#          "name": [ "John" ],
#          "age": [ "25", "30" ]
#        }
#      },
#      "httpResponse": [{
#        "statusCode": 202,
#        "headers": {
#          "request-id": "f9ed4675f1c53513c61a3b3b4e25b4c0"
#        },
#        "body": {
#          "users": ["John","Dave"]
#        },
#        "remainingTimes": 2,
#        "delay": 0
#      }]
#    }]
