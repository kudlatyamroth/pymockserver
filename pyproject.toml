[project]
requires-python = ">=3.12"

[tool.poetry]
name = "pymockserver"
version = "2.1.2"
description = "Simple MockServer implemented in python"
authors = ["Kudlaty <kfuks2@gmail.com>"]
license = "GPL-3.0"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.111.0"
uvicorn = "^0.30.1"
pyyaml = "^6.0.1"
gunicorn = "^22.0.0"
uvloop = "^0.19.0"
httptools = "^0.6.1"

[tool.poetry.group.dev.dependencies]
httpx = "^0.27.0"
mypy = "^1.10.1"
pytest = "^8.2.2"
mergedeep = "^1.3.4"
commitizen = "^3.27.0"
types-PyYAML = "^6.0.12"
ruff = "^0.5.0"

[tool.commitizen]
version_provider = "poetry"
name = "cz_conventional_commits"
version = "2.1.2"
annotated_tag = true
version_files = [
    "pyproject.toml:version",
    "pymockserver/main.py:__version__",
    "helm_v3/pymockserver/Chart.yaml:version",
    "helm_v3/pymockserver/Chart.yaml:appVersion",
]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "TID",  # flake8-tidy-imports
    "SIM",  # flake8-simplify
    "RET",  # flake8-return
    "ASYNC",  # flake8-async
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.mypy]
python_version = "3.12"
files = ["pymockserver", "tests"]
ignore_missing_imports = true
disallow_untyped_decorators = true
disallow_subclassing_any = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unused_configs = true
plugins = ["pydantic.mypy"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
